/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ProtectedRouteImport } from './routes/_protected'
import { Route as OnboardingRouteImport } from './routes/_onboarding'
import { Route as ProtectedIndexRouteImport } from './routes/_protected/index'
import { Route as AuthLoginRouteImport } from './routes/auth/login'
import { Route as OnboardingOnboardingRouteImport } from './routes/_onboarding/onboarding'
import { Route as ProtectedSettingIndexRouteImport } from './routes/_protected/setting/index'
import { Route as ProtectedTransactionSendRouteImport } from './routes/_protected/transaction/send'
import { Route as ProtectedTransactionReceiveRouteImport } from './routes/_protected/transaction/receive'
import { Route as OnboardingAuthImportRouteImport } from './routes/_onboarding/auth/import'
import { Route as OnboardingAuthCreateRouteImport } from './routes/_onboarding/auth/create'
import { Route as ProtectedSettingPhraseIndexRouteImport } from './routes/_protected/setting/phrase/index'
import { Route as ProtectedSettingPasswordIndexRouteImport } from './routes/_protected/setting/password/index'
import { Route as ProtectedSettingPhraseWarningRouteImport } from './routes/_protected/setting/phrase/warning'
import { Route as ProtectedSettingPasswordUpdateRouteImport } from './routes/_protected/setting/password/update'

const ProtectedRoute = ProtectedRouteImport.update({
  id: '/_protected',
  getParentRoute: () => rootRouteImport,
} as any)
const OnboardingRoute = OnboardingRouteImport.update({
  id: '/_onboarding',
  getParentRoute: () => rootRouteImport,
} as any)
const ProtectedIndexRoute = ProtectedIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ProtectedRoute,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRouteImport,
} as any)
const OnboardingOnboardingRoute = OnboardingOnboardingRouteImport.update({
  id: '/onboarding',
  path: '/onboarding',
  getParentRoute: () => OnboardingRoute,
} as any)
const ProtectedSettingIndexRoute = ProtectedSettingIndexRouteImport.update({
  id: '/setting/',
  path: '/setting/',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedTransactionSendRoute =
  ProtectedTransactionSendRouteImport.update({
    id: '/transaction/send',
    path: '/transaction/send',
    getParentRoute: () => ProtectedRoute,
  } as any)
const ProtectedTransactionReceiveRoute =
  ProtectedTransactionReceiveRouteImport.update({
    id: '/transaction/receive',
    path: '/transaction/receive',
    getParentRoute: () => ProtectedRoute,
  } as any)
const OnboardingAuthImportRoute = OnboardingAuthImportRouteImport.update({
  id: '/auth/import',
  path: '/auth/import',
  getParentRoute: () => OnboardingRoute,
} as any)
const OnboardingAuthCreateRoute = OnboardingAuthCreateRouteImport.update({
  id: '/auth/create',
  path: '/auth/create',
  getParentRoute: () => OnboardingRoute,
} as any)
const ProtectedSettingPhraseIndexRoute =
  ProtectedSettingPhraseIndexRouteImport.update({
    id: '/setting/phrase/',
    path: '/setting/phrase/',
    getParentRoute: () => ProtectedRoute,
  } as any)
const ProtectedSettingPasswordIndexRoute =
  ProtectedSettingPasswordIndexRouteImport.update({
    id: '/setting/password/',
    path: '/setting/password/',
    getParentRoute: () => ProtectedRoute,
  } as any)
const ProtectedSettingPhraseWarningRoute =
  ProtectedSettingPhraseWarningRouteImport.update({
    id: '/setting/phrase/warning',
    path: '/setting/phrase/warning',
    getParentRoute: () => ProtectedRoute,
  } as any)
const ProtectedSettingPasswordUpdateRoute =
  ProtectedSettingPasswordUpdateRouteImport.update({
    id: '/setting/password/update',
    path: '/setting/password/update',
    getParentRoute: () => ProtectedRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/onboarding': typeof OnboardingOnboardingRoute
  '/auth/login': typeof AuthLoginRoute
  '/': typeof ProtectedIndexRoute
  '/auth/create': typeof OnboardingAuthCreateRoute
  '/auth/import': typeof OnboardingAuthImportRoute
  '/transaction/receive': typeof ProtectedTransactionReceiveRoute
  '/transaction/send': typeof ProtectedTransactionSendRoute
  '/setting': typeof ProtectedSettingIndexRoute
  '/setting/password/update': typeof ProtectedSettingPasswordUpdateRoute
  '/setting/phrase/warning': typeof ProtectedSettingPhraseWarningRoute
  '/setting/password': typeof ProtectedSettingPasswordIndexRoute
  '/setting/phrase': typeof ProtectedSettingPhraseIndexRoute
}
export interface FileRoutesByTo {
  '/onboarding': typeof OnboardingOnboardingRoute
  '/auth/login': typeof AuthLoginRoute
  '/': typeof ProtectedIndexRoute
  '/auth/create': typeof OnboardingAuthCreateRoute
  '/auth/import': typeof OnboardingAuthImportRoute
  '/transaction/receive': typeof ProtectedTransactionReceiveRoute
  '/transaction/send': typeof ProtectedTransactionSendRoute
  '/setting': typeof ProtectedSettingIndexRoute
  '/setting/password/update': typeof ProtectedSettingPasswordUpdateRoute
  '/setting/phrase/warning': typeof ProtectedSettingPhraseWarningRoute
  '/setting/password': typeof ProtectedSettingPasswordIndexRoute
  '/setting/phrase': typeof ProtectedSettingPhraseIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_onboarding': typeof OnboardingRouteWithChildren
  '/_protected': typeof ProtectedRouteWithChildren
  '/_onboarding/onboarding': typeof OnboardingOnboardingRoute
  '/auth/login': typeof AuthLoginRoute
  '/_protected/': typeof ProtectedIndexRoute
  '/_onboarding/auth/create': typeof OnboardingAuthCreateRoute
  '/_onboarding/auth/import': typeof OnboardingAuthImportRoute
  '/_protected/transaction/receive': typeof ProtectedTransactionReceiveRoute
  '/_protected/transaction/send': typeof ProtectedTransactionSendRoute
  '/_protected/setting/': typeof ProtectedSettingIndexRoute
  '/_protected/setting/password/update': typeof ProtectedSettingPasswordUpdateRoute
  '/_protected/setting/phrase/warning': typeof ProtectedSettingPhraseWarningRoute
  '/_protected/setting/password/': typeof ProtectedSettingPasswordIndexRoute
  '/_protected/setting/phrase/': typeof ProtectedSettingPhraseIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/onboarding'
    | '/auth/login'
    | '/'
    | '/auth/create'
    | '/auth/import'
    | '/transaction/receive'
    | '/transaction/send'
    | '/setting'
    | '/setting/password/update'
    | '/setting/phrase/warning'
    | '/setting/password'
    | '/setting/phrase'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/onboarding'
    | '/auth/login'
    | '/'
    | '/auth/create'
    | '/auth/import'
    | '/transaction/receive'
    | '/transaction/send'
    | '/setting'
    | '/setting/password/update'
    | '/setting/phrase/warning'
    | '/setting/password'
    | '/setting/phrase'
  id:
    | '__root__'
    | '/_onboarding'
    | '/_protected'
    | '/_onboarding/onboarding'
    | '/auth/login'
    | '/_protected/'
    | '/_onboarding/auth/create'
    | '/_onboarding/auth/import'
    | '/_protected/transaction/receive'
    | '/_protected/transaction/send'
    | '/_protected/setting/'
    | '/_protected/setting/password/update'
    | '/_protected/setting/phrase/warning'
    | '/_protected/setting/password/'
    | '/_protected/setting/phrase/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  OnboardingRoute: typeof OnboardingRouteWithChildren
  ProtectedRoute: typeof ProtectedRouteWithChildren
  AuthLoginRoute: typeof AuthLoginRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_protected': {
      id: '/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_onboarding': {
      id: '/_onboarding'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof OnboardingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_protected/': {
      id: '/_protected/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof ProtectedIndexRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_onboarding/onboarding': {
      id: '/_onboarding/onboarding'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof OnboardingOnboardingRouteImport
      parentRoute: typeof OnboardingRoute
    }
    '/_protected/setting/': {
      id: '/_protected/setting/'
      path: '/setting'
      fullPath: '/setting'
      preLoaderRoute: typeof ProtectedSettingIndexRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/transaction/send': {
      id: '/_protected/transaction/send'
      path: '/transaction/send'
      fullPath: '/transaction/send'
      preLoaderRoute: typeof ProtectedTransactionSendRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/transaction/receive': {
      id: '/_protected/transaction/receive'
      path: '/transaction/receive'
      fullPath: '/transaction/receive'
      preLoaderRoute: typeof ProtectedTransactionReceiveRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_onboarding/auth/import': {
      id: '/_onboarding/auth/import'
      path: '/auth/import'
      fullPath: '/auth/import'
      preLoaderRoute: typeof OnboardingAuthImportRouteImport
      parentRoute: typeof OnboardingRoute
    }
    '/_onboarding/auth/create': {
      id: '/_onboarding/auth/create'
      path: '/auth/create'
      fullPath: '/auth/create'
      preLoaderRoute: typeof OnboardingAuthCreateRouteImport
      parentRoute: typeof OnboardingRoute
    }
    '/_protected/setting/phrase/': {
      id: '/_protected/setting/phrase/'
      path: '/setting/phrase'
      fullPath: '/setting/phrase'
      preLoaderRoute: typeof ProtectedSettingPhraseIndexRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/setting/password/': {
      id: '/_protected/setting/password/'
      path: '/setting/password'
      fullPath: '/setting/password'
      preLoaderRoute: typeof ProtectedSettingPasswordIndexRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/setting/phrase/warning': {
      id: '/_protected/setting/phrase/warning'
      path: '/setting/phrase/warning'
      fullPath: '/setting/phrase/warning'
      preLoaderRoute: typeof ProtectedSettingPhraseWarningRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/setting/password/update': {
      id: '/_protected/setting/password/update'
      path: '/setting/password/update'
      fullPath: '/setting/password/update'
      preLoaderRoute: typeof ProtectedSettingPasswordUpdateRouteImport
      parentRoute: typeof ProtectedRoute
    }
  }
}

interface OnboardingRouteChildren {
  OnboardingOnboardingRoute: typeof OnboardingOnboardingRoute
  OnboardingAuthCreateRoute: typeof OnboardingAuthCreateRoute
  OnboardingAuthImportRoute: typeof OnboardingAuthImportRoute
}

const OnboardingRouteChildren: OnboardingRouteChildren = {
  OnboardingOnboardingRoute: OnboardingOnboardingRoute,
  OnboardingAuthCreateRoute: OnboardingAuthCreateRoute,
  OnboardingAuthImportRoute: OnboardingAuthImportRoute,
}

const OnboardingRouteWithChildren = OnboardingRoute._addFileChildren(
  OnboardingRouteChildren,
)

interface ProtectedRouteChildren {
  ProtectedIndexRoute: typeof ProtectedIndexRoute
  ProtectedTransactionReceiveRoute: typeof ProtectedTransactionReceiveRoute
  ProtectedTransactionSendRoute: typeof ProtectedTransactionSendRoute
  ProtectedSettingIndexRoute: typeof ProtectedSettingIndexRoute
  ProtectedSettingPasswordUpdateRoute: typeof ProtectedSettingPasswordUpdateRoute
  ProtectedSettingPhraseWarningRoute: typeof ProtectedSettingPhraseWarningRoute
  ProtectedSettingPasswordIndexRoute: typeof ProtectedSettingPasswordIndexRoute
  ProtectedSettingPhraseIndexRoute: typeof ProtectedSettingPhraseIndexRoute
}

const ProtectedRouteChildren: ProtectedRouteChildren = {
  ProtectedIndexRoute: ProtectedIndexRoute,
  ProtectedTransactionReceiveRoute: ProtectedTransactionReceiveRoute,
  ProtectedTransactionSendRoute: ProtectedTransactionSendRoute,
  ProtectedSettingIndexRoute: ProtectedSettingIndexRoute,
  ProtectedSettingPasswordUpdateRoute: ProtectedSettingPasswordUpdateRoute,
  ProtectedSettingPhraseWarningRoute: ProtectedSettingPhraseWarningRoute,
  ProtectedSettingPasswordIndexRoute: ProtectedSettingPasswordIndexRoute,
  ProtectedSettingPhraseIndexRoute: ProtectedSettingPhraseIndexRoute,
}

const ProtectedRouteWithChildren = ProtectedRoute._addFileChildren(
  ProtectedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  OnboardingRoute: OnboardingRouteWithChildren,
  ProtectedRoute: ProtectedRouteWithChildren,
  AuthLoginRoute: AuthLoginRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
